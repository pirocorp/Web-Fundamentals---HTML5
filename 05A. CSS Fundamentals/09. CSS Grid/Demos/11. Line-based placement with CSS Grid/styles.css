* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6 {
    margin: 1.5em 0;
}

h1 {
    text-align: center;
}

hr {
    margin: 50px 0;
}

body {
    max-width: 1200px;
    margin: 0 auto;
    padding: 50px;
}

p {
    margin: 20px 0;
    font-size: 20px;
    line-height: 30px;
}

img {
    max-width: 100%;    
}

ul {
    padding-left: 50px;
    margin-bottom: 50px;
}

.wrapper,
.wrapper-2,
.wrapper-3,
.wrapper-4,
.wrapper-5   {
    grid-gap: 10px;

    background: #FFF4E6;

    border: 2px solid #F76707;
    border-radius: 5px;

    margin-bottom: 50px;
}

.wrapper > div,
.wrapper-2 > div,
.wrapper-3 > div,
.wrapper-4 > div,
.wrapper-5 > div {
    padding: 20px;

    background: #FFD8A8;
    color: #DC4838;

    border: 2px solid #FFA94D;
    border-radius: 5px;
}

.nested {
    padding: 20px;

    background: #FFFAD9;
    color: #DC4838;

    border: 2px solid #FFEC8F;
    border-radius: 5px;
}

.header {
    grid-area: hd;
}

.footer {
    grid-area: ft;
}

.sidebar {
    grid-area: sd;
}

.content {
    grid-area: main;
}

/* ---------------------------------------------------------------- */
.basic-example .wrapper {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 100px);
}

/* --------------------------------------------------------------- */
.position-by-number .wrapper {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 100px);
}

.position-by-number .wrapper .box1 {
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 1;
    grid-row-end: 4;

    /* --------The grid-column and grid-row shorthands-------- */
    grid-column: 1 / 2;
    grid-row: 1 / 4;

    /* --------Default spans - one track-------- */
    grid-column: 1 ;
    grid-row: 1 / 4;

    /* -------The grid-area property--------- */
    /* 
    grid-row-start
    grid-column-start
    grid-row-end
    grid-column-end
    */
    grid-area: 1 / 1 / 4 / 2;

    /* --------Counting backwards-------- */
    /* We can also count backwards from the block and inline end of the grid, 
    for English that would be the right hand column line and final row line. 
    These lines can be addressed as -1, and you can count back from there 
    – so the penultimate line is -2. */
    /* It is worth noting that the final line is the final line of the 
    explicit grid, the grid defined by grid-template-columns and grid-template-rows, 
    and does not take into account any rows or columns added in the implicit grid 
    outside of that. */
    grid-column-start: -4;
    grid-column-end: -3;
    grid-row-start: -1;
    grid-row-end: -4;

    /* Using the span keyword */
    grid-column: 1;
    grid-row: 1 / span 3;
}

.position-by-number .wrapper .box2 {
    grid-column-start: 3;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 3;   

    /* --------The grid-column and grid-row shorthands-------- */
    grid-column: 3 / 4;
    grid-row: 1 / 3;

    /* --------Default spans - one track-------- */
    grid-column: 3 ;
    grid-row: 1 / 3;

    /* --------The grid-area property-------- */
    /* 
    grid-row-start
    grid-column-start
    grid-row-end
    grid-column-end
    */
    grid-area: 1 / 3 / 3 / 4;

    /* --------Counting backwards-------- */
    /* We can also count backwards from the block and inline end of the grid, 
    for English that would be the right hand column line and final row line. 
    These lines can be addressed as -1, and you can count back from there 
    – so the penultimate line is -2. */
    /* It is worth noting that the final line is the final line of the 
    explicit grid, the grid defined by grid-template-columns and grid-template-rows, 
    and does not take into account any rows or columns added in the implicit grid 
    outside of that. */
    grid-column-start: -1;
    grid-column-end: -2;
    grid-row-start: -2;
    grid-row-end: -4;

    /* Using the span keyword */
    grid-column: 3;
    grid-row: 1 / span 2;
}

.position-by-number .wrapper .box3 {
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 2;

    /* --------The grid-column and grid-row shorthands-------- */
    grid-column: 2 / 3;
    grid-row: 1 /  2;

    /* --------Default spans - one track-------- */
    grid-column: 2 ;
    grid-row: 1 ;

    /* ---------The grid-area property------- */
    /* 
    grid-row-start
    grid-column-start
    grid-row-end
    grid-column-end
    */
    grid-area: 1 / 2 / 2 / 3;
    
    /* --------Counting backwards-------- */
    /* We can also count backwards from the block and inline end of the grid, 
    for English that would be the right hand column line and final row line. 
    These lines can be addressed as -1, and you can count back from there 
    – so the penultimate line is -2. */
    /* It is worth noting that the final line is the final line of the 
    explicit grid, the grid defined by grid-template-columns and grid-template-rows, 
    and does not take into account any rows or columns added in the implicit grid 
    outside of that. */
    grid-column-start: -2;
    grid-column-end: -3;
    grid-row-start: -3;
    grid-row-end: -4;

    /* Using the span keyword */
    grid-column: 2;
    grid-row: 1;
}
.position-by-number .wrapper .box4 {
    grid-column-start: 2;
    grid-column-end: 4;
    grid-row-start: 3;
    grid-row-end: 4;

    /* --------The grid-column and grid-row shorthands-------- */
    grid-column: 2 / 4;
    grid-row: 3 / 4;

    /* --------Default spans - one track-------- */
    grid-column: 2 / 4;
    grid-row: 3 ;

    /* -------The grid-area property--------- */
    /* 
    grid-row-start
    grid-column-start
    grid-row-end
    grid-column-end
    */
    grid-area: 3 / 2 / 4 / 4;
    
    /* --------Counting backwards-------- */
    /* We can also count backwards from the block and inline end of the grid, 
    for English that would be the right hand column line and final row line. 
    These lines can be addressed as -1, and you can count back from there 
    – so the penultimate line is -2. */
    /* It is worth noting that the final line is the final line of the 
    explicit grid, the grid defined by grid-template-columns and grid-template-rows, 
    and does not take into account any rows or columns added in the implicit grid 
    outside of that. */
    grid-column-start: -1;
    grid-column-end: -3;
    grid-row-start: -2;
    grid-row-end: -1;

    /* Using the span keyword */
    grid-column: 2 / span 2;
    grid-row: 3;
}

/* ----------------------------------------------------------------------------------- */
.stretch .wrapper {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 100px);
    /* Gaps only appear between tracks of the grid, they do not add space to the top and 
    bottom, left or right of the container. */
    grid-column-gap: 20px;
    grid-row-gap: 1em;
    /* The two properties can also be expressed as a shorthand, grid-gap. */
    grid-gap: 1em 20px;
}

.stretch .wrapper .box2 {
    grid-column: 1 / -1;
}